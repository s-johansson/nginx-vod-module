worker_processes  auto;

events {
    use epoll;
}

http {
    log_format  main  '$remote_addr $remote_user [$time_local] "$request" '
        '$status "$http_referer" "$http_user_agent"';

    access_log  /dev/stdout  main;
    error_log   stderr debug;

    lua_package_path "/usr/local/lib/lua/resty/core/base.lua;/usr/local/lib/lua/resty/core/regex.lua;/usr/local/lib/lua/resty/core.lua;;";

    init_by_lua_block {
        require "resty.core"
        collectgarbage("collect")  -- just to collect any garbage
    }

    server {
        # vod mode
        vod_mode mapped;

        # vod caches
        vod_metadata_cache metadata_cache 512m;
        vod_response_cache response_cache 128m;
        vod_mapping_cache mapping_cache 5m;

        # gzip manifests
        gzip on;
        gzip_types application/vnd.apple.mpegurl;

        # file handle caching
        open_file_cache          max=1000 inactive=5m;
        open_file_cache_valid    2m;
        open_file_cache_min_uses 1;
        open_file_cache_errors   on;

        location ^~ /video/ {
            alias /data/json/;
            vod hls;

            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            add_header Access-Control-Allow-Origin '*';
            expires 100d;
        }
    }
}